{"version":3,"sources":["shared/services/postsGallery.js","components/loader/Loader.jsx","components/errorNotification/ErrorNotification.jsx","components/searchbar/Searchbar.jsx","components/imageGallery/ImageGallery.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/button/Button.jsx","components/modal/Modal.jsx","App.js","index.js"],"names":["fetchImages","query","page","axios","get","baseUrl","propTypes","PropTypes","string","isRequired","number","LoaderComponent","type","color","height","width","Component","ErrorNotification","text","className","Searchbar","state","inputValue","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onSubmit","this","onChange","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","images","onOpenModal","map","id","webformatURL","largeImageURL","onClick","src","alt","data-largelink","Button","Modal","onClose","useEffect","window","addEventListener","closeModal","removeEventListener","key","initialState","isLoading","isModal","error","App","useState","then","imagesDataArr","data","hits","image","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","getDataImages","length","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a2763d09.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst baseUrl = \"https://pixabay.com/api/?q=\";\r\nconst pageUrl = \"&page=\";\r\nconst keyUrl = \"&key=23381165-23963a51c09328db6c17876e7\";\r\nconst optionsUrl = \"&image_type=photo&orientation=horizontal&per_page=12\";\r\n\r\nexport const fetchImages = (query, page) => {\r\n  return axios.get(baseUrl + query + pageUrl + page + keyUrl + optionsUrl);\r\n};\r\n\r\nfetchImages.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class LoaderComponent extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorNotification = ({ text }) => (\r\n  <h1 className=\"Error\">Whoops, something went wrong: {text}</h1>\r\n);\r\n\r\nexport default ErrorNotification;\r\n\r\nErrorNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n","// import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ inputValue: target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    const { handleChange, handleSubmit } = this;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ images, query, onOpenModal }) => {\r\n  return images.map(({ id, webformatURL, largeImageURL }) => (\r\n    <li\r\n      key={id}\r\n      onClick={() => onOpenModal(largeImageURL)}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img\r\n        src={webformatURL}\r\n        alt={query}\r\n        data-largelink={largeImageURL}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", closeModal);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n  });\r\n\r\n  const closeModal = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClose}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { fetchImages } from \"./shared/services/postsGallery\";\nimport LoaderComponent from \"./components/loader/Loader.jsx\";\nimport ErrorNotification from \"./components/errorNotification/ErrorNotification.jsx\";\nimport Searchbar from \"./components/searchbar/Searchbar.jsx\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery.jsx\";\nimport ImageGalleryItem from \"./components/imageGalleryItem/ImageGalleryItem.jsx\";\nimport Button from \"./components/button/Button.jsx\";\nimport Modal from \"./components/modal/Modal.jsx\";\nimport \"./Styles.css\";\n\nconst initialState = {\n  images: [],\n  isLoading: false,\n  isModal: false,\n  error: null,\n  query: \"\",\n  page: 1,\n  largeImageURL: \"\",\n};\n\nconst App = () => {\n  const [state, setState] = useState(initialState);\n\n  const handleSubmit = (inputValue) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n      query: inputValue,\n      images: [],\n      page: 1,\n    }));\n  };\n\n  const getDataImages = (query, page) => {\n    fetchImages(query, page)\n      .then(({ data }) => {\n        const imagesDataArr = data.hits.map((image) => {\n          const { id, webformatURL, largeImageURL } = image;\n          return { id, webformatURL, largeImageURL };\n        });\n        setState((prevState) => ({\n          ...prevState,\n          images: [...prevState.images, ...imagesDataArr],\n          page: prevState.page + 1,\n          isLoading: false,\n          error: null,\n        }));\n      })\n      .then(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) =>\n        setState((prevState) => ({ ...prevState, error, isLoading: false }))\n      );\n  };\n\n  useEffect(() => {\n    const { query, page, isLoading } = state;\n    if (isLoading) {\n      getDataImages(query, page);\n    }\n  }, [state.isLoading]);\n\n  const onButtonClick = () => {\n    setState((prevState) => ({ ...prevState, isLoading: true }));\n  };\n\n  const onOpenModal = (image) => {\n    setState((prevState) => ({\n      ...prevState,\n      largeImageURL: image,\n      isModal: true,\n    }));\n  };\n\n  const onCloseModal = () => {\n    setState((prevState) => ({ ...prevState, isModal: false }));\n  };\n\n  const { error, isLoading, images, query, largeImageURL, isModal } = state;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSubmit} />\n      {images.length > 0 && (\n        <ImageGallery>\n          {images.length > 0 && (\n            <ImageGalleryItem\n              images={images}\n              query={query}\n              onOpenModal={onOpenModal}\n            />\n          )}\n        </ImageGallery>\n      )}\n      {isModal && (\n        <Modal onClose={onCloseModal}>\n          <img src={largeImageURL} alt={query} />\n        </Modal>\n      )}\n      {error && <ErrorNotification text={error.message} />}\n      {isLoading && <LoaderComponent />}\n      {images.length > 0 && <Button onClick={onButtonClick} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}