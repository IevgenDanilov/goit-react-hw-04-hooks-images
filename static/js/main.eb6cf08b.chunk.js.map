{"version":3,"sources":["shared/services/postsGallery.js","components/loader/Loader.jsx","components/errorNotification/ErrorNotification.jsx","components/searchBar/SearchBar.jsx","components/imageGallery/ImageGallery.jsx","components/imageGalleryItem/ImageGalleryItem.jsx","components/button/Button.jsx","components/modal/Modal.jsx","App.js","index.js"],"names":["fetchImages","query","page","axios","get","baseUrl","propTypes","PropTypes","string","isRequired","number","LoaderComponent","type","color","height","width","Component","ErrorNotification","text","className","SearchBar","onSubmit","useState","inputValue","setInputValue","e","preventDefault","value","onChange","target","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","images","onOpenModal","map","id","webformatURL","largeImageURL","onClick","src","alt","data-largelink","Button","Modal","onClose","useEffect","window","addEventListener","closeModal","removeEventListener","key","App","setImages","isLoading","setIsLoading","isModal","setIsModal","error","setError","setQuery","setPage","setLargeImageURL","then","imagesDataArr","data","hits","image","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","getDataImages","length","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb6cf08b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst baseUrl = \"https://pixabay.com/api/?q=\";\r\nconst pageUrl = \"&page=\";\r\nconst keyUrl = \"&key=23381165-23963a51c09328db6c17876e7\";\r\nconst optionsUrl = \"&image_type=photo&orientation=horizontal&per_page=12\";\r\n\r\nexport const fetchImages = (query, page) => {\r\n  return axios.get(baseUrl + query + pageUrl + page + keyUrl + optionsUrl);\r\n};\r\n\r\nfetchImages.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class LoaderComponent extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ErrorNotification = ({ text }) => (\r\n  <h1 className=\"Error\">Whoops, something went wrong: {text}</h1>\r\n);\r\n\r\nexport default ErrorNotification;\r\n\r\nErrorNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleChange = ({ target }) => {\r\n    setInputValue(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ images, query, onOpenModal }) => {\r\n  return images.map(({ id, webformatURL, largeImageURL }) => (\r\n    <li\r\n      key={id}\r\n      onClick={() => onOpenModal(largeImageURL)}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img\r\n        src={webformatURL}\r\n        alt={query}\r\n        data-largelink={largeImageURL}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  onOpenModal: PropTypes.func.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" onClick={onClick} className=\"Button\">\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", closeModal);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", closeModal);\r\n    };\r\n  });\r\n\r\n  const closeModal = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={onClose}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { fetchImages } from \"./shared/services/postsGallery\";\nimport LoaderComponent from \"./components/loader/Loader.jsx\";\nimport ErrorNotification from \"./components/errorNotification/ErrorNotification.jsx\";\nimport SearchBar from \"./components/searchBar/SearchBar.jsx\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery.jsx\";\nimport ImageGalleryItem from \"./components/imageGalleryItem/ImageGalleryItem.jsx\";\nimport Button from \"./components/button/Button.jsx\";\nimport Modal from \"./components/modal/Modal.jsx\";\nimport \"./Styles.css\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModal, setIsModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\n\n  const handleSubmit = (inputValue) => {\n    setIsLoading(true);\n    setQuery(inputValue);\n    setImages([]);\n    setPage(1);\n  };\n\n  const getDataImages = (query, page) => {\n    fetchImages(query, page)\n      .then(({ data }) => {\n        const imagesDataArr = data.hits.map((image) => {\n          const { id, webformatURL, largeImageURL } = image;\n          return { id, webformatURL, largeImageURL };\n        });\n        setImages([...images, ...imagesDataArr]);\n        setPage(page + 1);\n        setIsLoading(false);\n        setError(null);\n      })\n      .then(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) => {\n        setError(error);\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (isLoading) {\n      getDataImages(query, page);\n    }\n  }, [isLoading]);\n\n  const onButtonClick = () => {\n    setIsLoading(true);\n  };\n\n  const onOpenModal = (image) => {\n    setLargeImageURL(image);\n    setIsModal(true);\n  };\n\n  const onCloseModal = (e) => {\n    if (e && e.target.className !== \"Overlay\") {\n      return null;\n    }\n    setIsModal(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar onSubmit={handleSubmit} />\n      {images.length > 0 && (\n        <ImageGallery>\n          {images.length > 0 && (\n            <ImageGalleryItem\n              images={images}\n              query={query}\n              onOpenModal={onOpenModal}\n            />\n          )}\n        </ImageGallery>\n      )}\n      {isModal && (\n        <Modal onClose={onCloseModal}>\n          <img src={largeImageURL} alt={query} />\n        </Modal>\n      )}\n      {error && <ErrorNotification text={error.message} />}\n      {isLoading && <LoaderComponent />}\n      {images.length > 0 && <Button onClick={onButtonClick} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}